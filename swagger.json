{
  "swagger": "2.0",
  "info": {
    "title": "Auth Verification API",
    "version": "1.0.0",
    "description": "API for user registration, login, password reset, and OTP verification"
  },
  "host": "localhost:3000",

  "tags": [
    {
      "name": "Authentication",
      "description": "API for user registration, login, and password reset"
    }
  ],
  "paths": {
    "/api/get-location": {
      "get": {
        "tags": ["User"],
        "summary": "Get geolocation of an IP address",
        "parameters": [
          {
            "name": "ip",
            "in": "query",
            "description": "IP address to lookup (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "ip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with location data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "hostname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "city": { "type": "string" },
                        "region": { "type": "string" },
                        "country": { "type": "string" },
                        "latitude": { "type": "number" },
                        "longitude": { "type": "number" },
                        "postal": { "type": "string" },
                        "timezone": { "type": "string" },
                        "continent": { "type": "string" },
                        "country_code": { "type": "string" },
                        "country_flag": { "type": "string" }
                      }
                    },
                    "org": { "type": "string" },
                    "is_anycast": { "type": "boolean" },
                    "is_mobile": { "type": "boolean" },
                    "is_anonymous": { "type": "boolean" },
                    "is_satellite": { "type": "boolean" },
                    "asn": { "type": "string" },
                    "company": { "type": "string" },
                    "privacy": {
                      "type": "object",
                      "properties": {
                        "vpn": { "type": "boolean" },
                        "proxy": { "type": "boolean" },
                        "tor": { "type": "boolean" },
                        "relay": { "type": "boolean" },
                        "hosting": { "type": "boolean" }
                      }
                    },
                    "abuse": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid IP address"
          },
          "404": {
            "description": "Location data not found for IP"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/calculate-distance": {
      "get": {
        "tags": ["User"],
        "summary": "Calculate the distance between two geographic points",
        "parameters": [
          {
            "name": "lat1",
            "in": "query",
            "description": "Latitude of the first point",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "lon1",
            "in": "query",
            "description": "Longitude of the first point",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "lat2",
            "in": "query",
            "description": "Latitude of the second point",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "lon2",
            "in": "query",
            "description": "Longitude of the second point",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Distance calculation and other details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "distance": {
                      "type": "object",
                      "properties": {
                        "meters": { "type": "number" },
                        "kilometers": { "type": "number" },
                        "miles": { "type": "number" },
                        "nautical_miles": { "type": "number" }
                      }
                    },
                    "midpoint": {
                      "type": "object",
                      "properties": {
                        "latitude": { "type": "number" },
                        "longitude": { "type": "number" }
                      }
                    },
                    "bearing": { "type": "number" },
                    "details": {
                      "type": "object",
                      "properties": {
                        "origin": { "type": "object", "properties": { "latitude": { "type": "number" }, "longitude": { "type": "number" } } },
                        "destination": { "type": "object", "properties": { "latitude": { "type": "number" }, "longitude": { "type": "number" } } },
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid coordinates"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["User"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string", "description": "User's username" },
                "email": { "type": "string", "description": "User's email" },
                "password": { "type": "string", "description": "User's password" }
              },
              "required": ["username", "email", "password" ],
              "example": {
                "username": "johndoe2",
                "email": "johndoe2@example.com",
                "password": "mysecurepassword"
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "User registered successfully" },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Login a user",
        "tags": ["User"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "usernameOrEmail": { "type": "string", "description": "Username or email" },
                "password": { "type": "string", "description": "Password" }
              },
              "required": ["usernameOrEmail", "password"],
              "example": {
                "usernameOrEmail": "johndoe2",
                "password": "mysecurepassword"
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Login successful" },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal server error" }
        }
      }
    }
  ,
    "/api/me": {
      "get": {
        "summary": "Get logged-in user info",
        "tags": ["User"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": { "description": "User info retrieved" },
          "401": { "description": "Access token required" },
          "403": { "description": "Invalid or expired token" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/api/logout": {
      "post": {
        "summary": "Log out a user",
        "tags": ["User"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": { "type": "string", "description": "Refresh token" }
              },
              "required": ["refreshToken"]
            }
          }
        ],
        "responses": {
          "200": { "description": "User logged out successfully" },
          "400": { "description": "Refresh token is required or invalid" },
          "500": { "description": "Error logging out" }
        }
      }
    
  },
  "/api/generate": {
    "post": {
      "tags": ["LLama"],
      "summary": "Generate code or response from Llama model",
      "description": "Generates code or response based on an instruction",
      "parameters": [
        {
          "name": "instruction",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "instruction": {
                "type": "string",
                "example": "Generate a Python function to calculate factorial."
              },
              "language": {
                "type": "string",
                "example": "python"
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully generated response",
          "schema": {
            "type": "object",
            "properties": {
              "result": {
                "type": "string",
                "example": "def factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)"
              }
            }
          }
        },
        "400": {
          "description": "Bad request, missing instruction or language"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  
  "/generate": {
    "post": {
      "tags": ["Llama"],
      "summary": "Generate code",
      "description": "Generates code based on an instruction and programming language.",
      "parameters": [
        {
          "name": "input",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "example": "{\"text\": \"Write a Python function to calculate factorial\", \"language\": \"python\"}"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully generated code",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "response": { "type": "string", "example": "def factorial(n): return 1 if n == 0 else n * factorial(n-1)" }
                }
              }
            }
          }
        },
        "400": { "description": "Bad request (Missing fields)" },
        "500": { "description": "Internal server error" }
      }
    }
  },
  "/summarize": {
    "post": {
      "tags": ["Llama"],
      "summary": "Summarize text",
      "description": "Summarizes a given text into a shorter version.",
      "parameters": [
        {
          "name": "input",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "example": "{\"text\": \"Machine learning enables computers to learn from data and improve performance over time.\"}"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully summarized text",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "summary": { "type": "string", "example": "Machine learning allows computers to improve with data." }
                }
              }
            }
          }
        },
        "400": { "description": "Bad request (Missing text)" },
        "500": { "description": "Internal server error" }
      }
    }
  },
  "/translate": {
    "post": {
      "tags": ["Llama"],
      "summary": "Translate text",
      "description": "Translates a given text into a specified target language.",
      "parameters": [
        {
          "name": "input",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "example": "{\"text\": \"Hello, how are you?\", \"targetLanguage\": \"Spanish\"}"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully translated text",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "translation": { "type": "string", "example": "Hola, ¿cómo estás?" }
                }
              }
            }
          }
        },
        "400": { "description": "Bad request (Missing fields)" },
        "500": { "description": "Internal server error" }
      }
    }
  }
  ,
  "/api/explain": {
    "post": {
      "tags": ["LLama"],
      "summary": "Explain code in a specific language",
      "description": "Provides an explanation of the provided code snippet",
      "parameters": [
        {
          "name": "code",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "def factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)"
              },
              "language": {
                "type": "string",
                "example": "python"
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully explained the code",
          "schema": {
            "type": "object",
            "properties": {
              "result": {
                "type": "string",
                "example": "This function calculates the factorial of a number recursively. The base case is when n equals 0, in which case the function returns 1."
              }
            }
          }
        },
        "400": {
          "description": "Bad request, missing code or language"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/api/debug": {
    "post": {
      "tags": ["LLama"],
      "summary": "Debug code in a specific language",
      "description": "Analyzes and identifies issues in the provided code snippet",
      "parameters": [
        {
          "name": "code",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "def factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)"
              },
              "language": {
                "type": "string",
                "example": "python"
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully debugged the code",
          "schema": {
            "type": "object",
            "properties": {
              "result": {
                "type": "string",
                "example": "No syntax errors detected. The function works as intended."
              }
            }
          }
        },
        "400": {
          "description": "Bad request, missing code or language"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/api/refactor": {
    "post": {
      "tags": ["LLama"],
      "summary": "Refactor code to improve readability or performance",
      "description": "Provides refactoring suggestions for the provided code",
      "parameters": [
        {
          "name": "code",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "def factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)"
              },
              "language": {
                "type": "string",
                "example": "python"
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully refactored the code",
          "schema": {
            "type": "object",
            "properties": {
              "result": {
                "type": "string",
                "example": "def factorial(n):\n    if n == 0: return 1\n    return n * factorial(n - 1)"
              }
            }
          }
        },
        "400": {
          "description": "Bad request, missing code or language"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/api/convert": {
    "post": {
      "tags": ["LLama"],
      "summary": "Convert code from one language to another",
      "description": "Converts the provided code from one programming language to another",
      "parameters": [
        {
          "name": "code",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "def factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)"
              },
              "fromLanguage": {
                "type": "string",
                "example": "python"
              },
              "toLanguage": {
                "type": "string",
                "example": "javascript"
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully converted the code",
          "schema": {
            "type": "object",
            "properties": {
              "result": {
                "type": "string",
                "example": "function factorial(n) {\n    if (n === 0) return 1;\n    return n * factorial(n - 1);\n}"
              }
            }
          }
        },
        "400": {
          "description": "Bad request, missing code or languages"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
  "/api/validate": {
    "post": {
      "tags": ["LLama"],
      "summary": "Validate the syntax of the provided code",
      "description": "Checks whether the provided code is syntactically correct in the specified language",
      "parameters": [
        {
          "name": "code",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "def factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)"
              },
              "language": {
                "type": "string",
                "example": "python"
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully validated the code",
          "schema": {
            "type": "object",
            "properties": {
              "result": {
                "type": "string",
                "example": "No syntax errors detected."
              }
            }
          }
        },
        "400": {
          "description": "Bad request, missing code or language"
        },
        "500": {
          "description": "Server error"
        }
      }
    }
  },
 

    "/auth/forgot-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Request a password reset link",
        "description": "Sends an email with a password reset link.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgotPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email sent successfully"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Reset user password",
        "description": "Resets the user's password with a valid token and new password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "Invalid or expired token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/sendOTP": {
      "get": {
        "tags": ["otp"],
        "summary": "Send OTP to email",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Email to send OTP to"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP sent successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/verifyOTP": {
      "get": {
        "tags": ["otp"],
        "summary": "Verify OTP",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Email to verify OTP for"
            }
          },
          {
            "in": "query",
            "name": "otp",
            "required": true,
            "schema": {
              "type": "string",
              "description": "OTP to verify"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP verification successful"
          },
          "400": {
            "description": "Invalid OTP"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/sendResetLink": {
      "get": {
        "tags": ["otp"],
        "summary": "Send password reset link to email",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Email to send reset link to"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset link sent successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/resetPassword": {
      "post": {
        "tags": ["otp"],
        "summary": "Reset password using the reset token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been reset successfully"
          },
          "400": {
            "description": "Invalid or expired reset token, or passwords do not match"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/feedback": {
      "post": {
        "tags": ["otp"],
        "summary": "Send user feedback",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email address"
                  },
                  "message": {
                    "type": "string",
                    "description": "Feedback message"
                  }
                },
                "required": ["email", "message"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback sent successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/sendEmailNotification": {
      "post": {
        "tags": ["otp"],
        "summary": "Send an email notification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully"
          },
          "400": {
            "description": "Missing required fields or invalid data"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/reset-Password/{token}": {
      "get": {
        "tags": ["otp"],
        "summary": "Route to serve the password reset form",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Password reset token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset form rendered"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SendOTPRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email to send OTP to"
          }
        },
        "required": ["email"]
      },
      "VerifyOTPRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email to verify OTP for"
          },
          "otp": {
            "type": "string",
            "description": "OTP to verify"
          }
        },
        "required": ["email", "otp"]
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Reset token for password reset"
          },
          "newPassword": {
            "type": "string",
            "description": "New password to set"
          },
          "confirmPassword": {
            "type": "string",
            "description": "Confirmation of the new password"
          }
        },
        "required": ["token", "newPassword", "confirmPassword"]
      },
      "SendEmailRequest": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "Recipient email address"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the email"
          },
          "html": {
            "type": "string",
            "description": "HTML content of the email"
          },
          "text": {
            "type": "string",
            "description": "Plain text content of the email"
          }
        },
        "required": ["to", "subject", "html", "text"]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ForgotPassword": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "ResetPassword": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "SendOtp": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        }
      }
    },
    "VerifyOtp": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "otp": {
          "type": "string"
        }
      }
    } 
  }
}
