/// <reference types="node" />
import { ModelCallMetadata } from "../ModelCallMetadata.js";
export declare class ImageGenerationPromise extends Promise<Buffer> {
    private fullPromise;
    private imageBase64Promise;
    private imageBufferPromise;
    constructor(fullPromise: Promise<{
        value: string;
        response: unknown;
        metadata: ModelCallMetadata;
    }>);
    asFullResponse(): Promise<{
        value: string;
        response: unknown;
        metadata: ModelCallMetadata;
    }>;
    asBase64Text(): Promise<string>;
    asBuffer(): Promise<Buffer>;
    then<TResult1 = Buffer, TResult2 = never>(onfulfilled?: ((value: Buffer) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): Promise<Buffer | TResult>;
    finally(onfinally?: (() => void) | undefined | null): Promise<Buffer>;
}
