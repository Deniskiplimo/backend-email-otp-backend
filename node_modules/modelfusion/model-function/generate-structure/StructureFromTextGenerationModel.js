import { generateText } from "../generate-text/generateText.js";
import { StructureParseError } from "./StructureParseError.js";
export class StructureFromTextGenerationModel {
    constructor({ model, format, }) {
        Object.defineProperty(this, "model", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "format", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.model = model;
        this.format = format;
    }
    get modelInformation() {
        return this.model.modelInformation;
    }
    get settings() {
        return this.model.settings;
    }
    get settingsForEvent() {
        return this.model.settingsForEvent;
    }
    async doGenerateStructure(structure, prompt, options) {
        const { response, value } = await generateText(this.model, this.format.createPrompt(prompt, structure), options).asFullResponse();
        try {
            return {
                response,
                value: this.format.extractStructure(value),
                valueText: value,
            };
        }
        catch (error) {
            throw new StructureParseError({
                structureName: structure.name,
                valueText: value,
                cause: error,
            });
        }
    }
    withSettings(additionalSettings) {
        return new StructureFromTextGenerationModel({
            model: this.model.withSettings(additionalSettings),
            format: this.format,
        });
    }
}
