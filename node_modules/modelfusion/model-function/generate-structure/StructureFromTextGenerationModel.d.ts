import { FunctionOptions } from "../../core/FunctionOptions.js";
import { StructureDefinition } from "../../core/structure/StructureDefinition.js";
import { TextGenerationModel, TextGenerationModelSettings } from "../generate-text/TextGenerationModel.js";
import { StructureGenerationModel } from "./StructureGenerationModel.js";
export type StructureFromTextPromptFormat<PROMPT> = {
    createPrompt: (prompt: PROMPT, structure: StructureDefinition<string, unknown>) => string;
    extractStructure: (response: string) => unknown;
};
export declare class StructureFromTextGenerationModel<PROMPT, MODEL extends TextGenerationModel<string, TextGenerationModelSettings>> implements StructureGenerationModel<PROMPT, MODEL["settings"]> {
    private readonly model;
    private readonly format;
    constructor({ model, format, }: {
        model: MODEL;
        format: StructureFromTextPromptFormat<PROMPT>;
    });
    get modelInformation(): import("../ModelInformation.js").ModelInformation;
    get settings(): TextGenerationModelSettings;
    get settingsForEvent(): Partial<MODEL["settings"]>;
    doGenerateStructure(structure: StructureDefinition<string, unknown>, prompt: PROMPT, options?: FunctionOptions): Promise<{
        response: unknown;
        value: unknown;
        valueText: string;
    }>;
    withSettings(additionalSettings: Partial<MODEL["settings"]>): this;
}
