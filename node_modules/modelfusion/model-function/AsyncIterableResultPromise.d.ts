import { ModelCallMetadata } from "./ModelCallMetadata.js";
export declare class AsyncIterableResultPromise<T> extends Promise<AsyncIterable<T>> {
    private fullPromise;
    private outputPromise;
    constructor(fullPromise: Promise<{
        output: AsyncIterable<T>;
        metadata: Omit<ModelCallMetadata, "durationInMs" | "finishTimestamp">;
    }>);
    asFullResponse(): Promise<{
        output: AsyncIterable<T>;
        metadata: Omit<ModelCallMetadata, "durationInMs" | "finishTimestamp">;
    }>;
    then<TResult1 = AsyncIterable<T>, TResult2 = never>(onfulfilled?: ((value: AsyncIterable<T>) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): Promise<AsyncIterable<T> | TResult>;
    finally(onfinally?: (() => void) | undefined | null): Promise<AsyncIterable<T>>;
}
