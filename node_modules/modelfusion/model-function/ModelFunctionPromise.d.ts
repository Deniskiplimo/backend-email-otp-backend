import { ModelCallMetadata } from "./ModelCallMetadata.js";
export declare class ModelFunctionPromise<VALUE> extends Promise<VALUE> {
    private fullPromise;
    private valuePromise;
    constructor(fullPromise: Promise<{
        value: VALUE;
        response: unknown;
        metadata: ModelCallMetadata;
    }>);
    asFullResponse(): Promise<{
        value: VALUE;
        response: unknown;
        metadata: ModelCallMetadata;
    }>;
    then<TResult1 = VALUE, TResult2 = never>(onfulfilled?: ((value: VALUE) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    catch<TResult = never>(onrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined | null): Promise<VALUE | TResult>;
    finally(onfinally?: (() => void) | undefined | null): Promise<VALUE>;
}
