export class AsyncIterableResultPromise extends Promise {
    constructor(fullPromise) {
        super((resolve) => {
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            resolve(null); // we override the resolve function
        });
        Object.defineProperty(this, "fullPromise", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: fullPromise
        });
        Object.defineProperty(this, "outputPromise", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.outputPromise = fullPromise.then((result) => result.output);
    }
    asFullResponse() {
        return this.fullPromise;
    }
    then(onfulfilled, onrejected) {
        return this.outputPromise.then(onfulfilled, onrejected);
    }
    catch(onrejected) {
        return this.outputPromise.catch(onrejected);
    }
    finally(onfinally) {
        return this.outputPromise.finally(onfinally);
    }
}
