"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapChatPromptToTextFormat = exports.mapInstructionPromptToTextFormat = void 0;
const validateChatPrompt_js_1 = require("./validateChatPrompt.cjs");
/**
 * Formats an instruction prompt as a basic text prompt.
 */
const mapInstructionPromptToTextFormat = () => ({
    stopSequences: [],
    format: (instruction) => {
        let text = "";
        if (instruction.system != null) {
            text += `${instruction.system}\n\n`;
        }
        text += instruction.instruction;
        if (instruction.input != null) {
            text += `\n\n${instruction.input}`;
        }
        return text;
    },
});
exports.mapInstructionPromptToTextFormat = mapInstructionPromptToTextFormat;
/**
 * Formats a chat prompt as a basic text prompt.
 *
 * @param user The label of the user in the chat.
 * @param ai The name of the AI in the chat.
 */
const mapChatPromptToTextFormat = ({ user = "user", ai = "ai", } = {}) => ({
    format: (chatPrompt) => {
        (0, validateChatPrompt_js_1.validateChatPrompt)(chatPrompt);
        let text = "";
        for (let i = 0; i < chatPrompt.length; i++) {
            const message = chatPrompt[i];
            // system message:
            if (i === 0 &&
                "system" in message &&
                typeof message.system === "string") {
                text += `${message.system}\n\n`;
                continue;
            }
            // user message
            if ("user" in message) {
                text += `${user}:\n${message.user}\n\n`;
                continue;
            }
            // ai message:
            if ("ai" in message) {
                text += `${ai}:\n${message.ai}\n\n`;
                continue;
            }
            // unsupported message:
            throw new Error(`Unsupported message: ${JSON.stringify(message)}`);
        }
        // AI message prefix:
        text += `${ai}:\n`;
        return text;
    },
    stopSequences: [`\n${user}:`],
});
exports.mapChatPromptToTextFormat = mapChatPromptToTextFormat;
