import { FunctionOptions } from "../../core/FunctionOptions.js";
import { PromptFormatTextGenerationModel } from "./PromptFormatTextGenerationModel.js";
import { TextGenerationModelSettings, TextStreamingModel } from "./TextGenerationModel.js";
import { TextGenerationPromptFormat } from "./TextGenerationPromptFormat.js";
export declare class PromptFormatTextStreamingModel<PROMPT, MODEL_PROMPT, SETTINGS extends TextGenerationModelSettings, MODEL extends TextStreamingModel<MODEL_PROMPT, SETTINGS>> extends PromptFormatTextGenerationModel<PROMPT, MODEL_PROMPT, SETTINGS, MODEL> implements TextStreamingModel<PROMPT, SETTINGS> {
    constructor(options: {
        model: MODEL;
        promptFormat: TextGenerationPromptFormat<PROMPT, MODEL_PROMPT>;
    });
    doStreamText(prompt: PROMPT, options?: FunctionOptions): PromiseLike<AsyncIterable<import("../Delta.js").Delta<string>>>;
    withPromptFormat<INPUT_PROMPT>(promptFormat: TextGenerationPromptFormat<INPUT_PROMPT, PROMPT>): PromptFormatTextStreamingModel<INPUT_PROMPT, PROMPT, SETTINGS, this>;
    withSettings(additionalSettings: Partial<SETTINGS>): this;
}
