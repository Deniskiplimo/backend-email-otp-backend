"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.upsertIntoVectorIndex = void 0;
const nanoid_1 = require("nanoid");
const embed_js_1 = require("../model-function/embed/embed.cjs");
async function upsertIntoVectorIndex({ vectorIndex, embeddingModel, generateId = nanoid_1.nanoid, objects, getValueToEmbed, getId, }, options) {
    // many embedding models support bulk embedding, so we first embed all texts:
    const embeddings = await (0, embed_js_1.embedMany)(embeddingModel, objects.map(getValueToEmbed), options);
    await vectorIndex.upsertMany(objects.map((object, i) => ({
        id: getId?.(object, i) ?? generateId(),
        vector: embeddings[i],
        data: object,
    })));
}
exports.upsertIntoVectorIndex = upsertIntoVectorIndex;
