import { z } from "zod";
import { ApiCallError } from "../../core/api/ApiCallError.js";
import { parseJsonWithZod } from "../../util/parseJSON.js";
export const automatic1111ErrorDataSchema = z.object({
    error: z.string(),
    detail: z.string(),
    body: z.string(),
    errors: z.string(),
});
export class Automatic1111Error extends ApiCallError {
    constructor({ data, statusCode, url, requestBodyValues, message = data.detail, }) {
        super({ message, statusCode, requestBodyValues, url });
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.data = data;
    }
}
export const failedAutomatic1111CallResponseHandler = async ({ response, url, requestBodyValues }) => {
    const responseBody = await response.text();
    const parsedError = parseJsonWithZod(responseBody, automatic1111ErrorDataSchema);
    return new Automatic1111Error({
        url,
        requestBodyValues,
        statusCode: response.status,
        data: parsedError,
    });
};
