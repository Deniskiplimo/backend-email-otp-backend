/// <reference types="node" />
import { FunctionOptions } from "../../core/FunctionOptions.js";
import { ApiConfiguration } from "../../core/api/ApiConfiguration.js";
import { AbstractModel } from "../../model-function/AbstractModel.js";
import { SpeechSynthesisModel, SpeechSynthesisModelSettings } from "../../model-function/synthesize-speech/SpeechSynthesisModel.js";
export interface ElevenLabsSpeechSynthesisModelSettings extends SpeechSynthesisModelSettings {
    api?: ApiConfiguration;
    voice: string;
    model?: string;
    voiceSettings?: {
        stability: number;
        similarityBoost: number;
        style?: number;
        useSpeakerBoost?: boolean;
    };
}
/**
 * Synthesize speech using the ElevenLabs Text to Speech API.
 *
 * @see https://api.elevenlabs.io/docs#/text-to-speech/Text_to_speech_v1_text_to_speech__voice_id__post
 */
export declare class ElevenLabsSpeechSynthesisModel extends AbstractModel<ElevenLabsSpeechSynthesisModelSettings> implements SpeechSynthesisModel<ElevenLabsSpeechSynthesisModelSettings> {
    constructor(settings: ElevenLabsSpeechSynthesisModelSettings);
    readonly provider = "elevenlabs";
    get modelName(): string;
    private callAPI;
    get settingsForEvent(): Partial<ElevenLabsSpeechSynthesisModelSettings>;
    generateSpeechResponse(text: string, options?: FunctionOptions): Promise<Buffer>;
    withSettings(additionalSettings: Partial<ElevenLabsSpeechSynthesisModelSettings>): this;
}
