/// <reference types="node" />
import { AbstractModel } from "../../model-function/AbstractModel.js";
import { ApiConfiguration } from "../../core/api/ApiConfiguration.js";
import { FunctionOptions } from "../../core/FunctionOptions.js";
import { SpeechSynthesisModel, SpeechSynthesisModelSettings } from "../../model-function/synthesize-speech/SpeechSynthesisModel.js";
export interface LmntSpeechSynthesisModelSettings extends SpeechSynthesisModelSettings {
    api?: ApiConfiguration;
    voice: string;
    speed?: number;
    seed?: number;
    length?: number;
}
/**
 * Synthesize speech using the LMNT API.
 *
 * @see https://www.lmnt.com/docs/rest/#synthesize-speech
 */
export declare class LmntSpeechSynthesisModel extends AbstractModel<LmntSpeechSynthesisModelSettings> implements SpeechSynthesisModel<LmntSpeechSynthesisModelSettings> {
    constructor(settings: LmntSpeechSynthesisModelSettings);
    readonly provider = "lmnt";
    get modelName(): string;
    private callAPI;
    get settingsForEvent(): Partial<LmntSpeechSynthesisModelSettings>;
    generateSpeechResponse(text: string, options?: FunctionOptions): Promise<Buffer>;
    withSettings(additionalSettings: Partial<LmntSpeechSynthesisModelSettings>): this;
}
