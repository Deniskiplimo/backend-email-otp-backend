import { z } from "zod";
import { ApiCallError } from "../../core/api/ApiCallError.js";
import { ResponseHandler } from "../../core/api/postToApi.js";
export declare const cohereErrorDataSchema: z.ZodObject<{
    message: z.ZodString;
}, "strip", z.ZodTypeAny, {
    message: string;
}, {
    message: string;
}>;
export type CohereErrorData = z.infer<typeof cohereErrorDataSchema>;
export declare class CohereError extends ApiCallError {
    readonly data: CohereErrorData;
    constructor({ data, statusCode, url, requestBodyValues, message, }: {
        message?: string;
        statusCode: number;
        url: string;
        requestBodyValues: unknown;
        data: CohereErrorData;
    });
}
export declare const failedCohereCallResponseHandler: ResponseHandler<ApiCallError>;
