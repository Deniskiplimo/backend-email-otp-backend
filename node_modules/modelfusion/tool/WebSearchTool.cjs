"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebSearchTool = void 0;
const zod_1 = require("zod");
const ZodSchema_js_1 = require("../core/structure/ZodSchema.cjs");
const Tool_js_1 = require("./Tool.cjs");
const OUTPUT_SCHEMA = new ZodSchema_js_1.ZodSchema(zod_1.z.object({
    results: zod_1.z.array(zod_1.z.object({
        title: zod_1.z.string(),
        link: zod_1.z.string().url(),
        snippet: zod_1.z.string(),
    })),
}));
// expose the schemas to library consumers:
const createInputSchema = (description) => 
// same structure, but with description:
new ZodSchema_js_1.ZodSchema(zod_1.z.object({
    query: zod_1.z.string().describe(description),
}));
/**
 * A tool for searching the web.
 *
 * The input schema takes a query string.
 * ```ts
 * {
 *   query: "How many people live in Berlin?"
 * }
 * ```
 *
 * The output schema is an array of search results with title, link and snippet.
 * ```ts
 * {
 *  results:
 *   [
 *     {
 *       title: "Berlin - Wikipedia",
 *       link: "https://en.wikipedia.org/wiki/Berlin",
 *       snippet: "Berlin is the capital and largest city of Germany by...",
 *     },
 *     ...
 *   ]
 * }
 * ```
 */
class WebSearchTool extends Tool_js_1.Tool {
    constructor({ name, description, queryDescription = "Search query", execute, }) {
        super({
            name,
            description,
            inputSchema: createInputSchema(queryDescription),
            outputSchema: OUTPUT_SCHEMA,
            execute,
        });
    }
}
exports.WebSearchTool = WebSearchTool;
