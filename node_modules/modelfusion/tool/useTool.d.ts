import { FunctionOptions } from "../core/FunctionOptions.js";
import { StructureGenerationModel, StructureGenerationModelSettings } from "../model-function/generate-structure/StructureGenerationModel.js";
import { Tool } from "./Tool.js";
/**
 * `useTool` uses `generateStructure` to generate parameters for a tool and then executes the tool with the parameters.
 *
 * @returns The result contains the name of the tool (`tool` property),
 * the parameters (`parameters` property, typed),
 * and the result of the tool execution (`result` property, typed).
 */
export declare function useTool<PROMPT, TOOL extends Tool<any, any, any>>(model: StructureGenerationModel<PROMPT, StructureGenerationModelSettings>, tool: TOOL, prompt: PROMPT | ((tool: TOOL) => PROMPT), options?: FunctionOptions): Promise<{
    tool: TOOL["name"];
    parameters: TOOL["inputSchema"];
    result: Awaited<ReturnType<TOOL["execute"]>>;
}>;
