import { generateStructure } from "../model-function/generate-structure/generateStructure.js";
import { executeTool } from "./executeTool.js";
/**
 * `useTool` uses `generateStructure` to generate parameters for a tool and then executes the tool with the parameters.
 *
 * @returns The result contains the name of the tool (`tool` property),
 * the parameters (`parameters` property, typed),
 * and the result of the tool execution (`result` property, typed).
 */
export async function useTool(model, tool, prompt, options) {
    // Note: PROMPT must not be a function.
    const expandedPrompt = typeof prompt === "function"
        ? prompt(tool)
        : prompt;
    const { value } = await generateStructure(model, {
        name: tool.name,
        description: tool.description,
        schema: tool.inputSchema,
    }, expandedPrompt, options).asFullResponse();
    return {
        tool: tool.name,
        parameters: value,
        result: await executeTool(tool, value, options),
    };
}
