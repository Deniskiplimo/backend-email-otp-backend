import { generateStructureOrText } from "../model-function/generate-structure/generateStructureOrText.js";
import { NoSuchToolError } from "./NoSuchToolError.js";
import { executeTool } from "./executeTool.js";
export async function useToolOrGenerateText(model, tools, prompt, options) {
    // Note: PROMPT must not be a function.
    const expandedPrompt = typeof prompt === "function"
        ? prompt(tools)
        : prompt;
    const modelResponse = await generateStructureOrText(model, tools.map((tool) => ({
        name: tool.name,
        description: tool.description,
        schema: tool.inputSchema,
    })), expandedPrompt, options);
    const { structure, text } = modelResponse;
    if (structure == null) {
        return {
            tool: null,
            parameters: null,
            result: null,
            text,
        };
    }
    const tool = tools.find((tool) => tool.name === structure);
    if (tool == null) {
        throw new NoSuchToolError(structure.toString());
    }
    const toolParameters = modelResponse.value;
    const result = await executeTool(tool, toolParameters, options);
    return {
        tool: structure,
        result,
        parameters: toolParameters,
        text: text, // string | null is the expected value here
    };
}
