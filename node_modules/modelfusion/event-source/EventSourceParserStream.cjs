"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSourceParserStream = void 0;
const eventsource_parser_1 = require("eventsource-parser");
const { Transform } = require("stream"); // Import the Transform class from Node.js's 'stream' module

/**
 * A Transform stream that ingests a stream of strings and produces a stream of ParsedEvents.
 *
 * @example
 * ```
 * const eventStream =
 *   response.body
 *     .pipe(new TextDecoderStream())
 *     .pipe(new EventSourceParserStream())
 * ```
 */
class EventSourceParserStream extends Transform {
    constructor() {
        super({ readableObjectMode: true });  // Ensure readableObjectMode is set for object streams
        let parser;
        this._transform = (chunk, encoding, callback) => {
            if (!parser) {
                parser = (0, eventsource_parser_1.createParser)((event) => {
                    if (event.type === "event") {
                        this.push(event); // Use this.push() instead of controller.enqueue() in Node.js
                    }
                });
            }
            parser.feed(chunk);
            callback();
        };
    }
}

exports.EventSourceParserStream = EventSourceParserStream;
