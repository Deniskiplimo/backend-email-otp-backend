import SecureJSON from "secure-json-parse";
import { JSONParseError } from "./JSONParseError.js";
export function parseJsonWithZod(json, schema) {
    try {
        const parsedJson = SecureJSON.parse(json);
        return schema.parse(parsedJson);
    }
    catch (error) {
        throw new JSONParseError({
            valueText: json,
            cause: error,
        });
    }
}
export function safeParseJsonWithZod(json, schema) {
    try {
        const parsedJson = SecureJSON.parse(json);
        const validationResult = schema.safeParse(parsedJson);
        if (validationResult.success) {
            return validationResult;
        }
        return {
            success: false,
            error: new JSONParseError({
                valueText: json,
                cause: validationResult.error,
            }),
        };
    }
    catch (error) {
        throw new JSONParseError({
            valueText: json,
            cause: error,
        });
    }
}
export function safeParseJsonWithSchema(json, schema) {
    try {
        const parsedJson = SecureJSON.parse(json);
        const validationResult = schema.validate(parsedJson);
        if (validationResult.success) {
            return validationResult;
        }
        return {
            success: false,
            error: new JSONParseError({
                valueText: json,
                cause: validationResult.error,
            }),
        };
    }
    catch (error) {
        throw new JSONParseError({
            valueText: json,
            cause: error,
        });
    }
}
